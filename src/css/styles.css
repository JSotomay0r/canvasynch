:root {
    --spacer-5: 2rem;
    --spacer-4: 1rem;
    --spacer-3: .75rem;
    --spacer-2: .5rem;
    --spacer-1: .25rem;
    --color-fg: #000;
    --color-bg: #fff;
}
body {
    font-family: 'Cabin', Sans-Serif;
    --bs-font-sans-serif: 'Cabin', Sans-Serif!important; /*override*/
    display: flex;
    flex-direction: column;
    height: 100vh;
}

h1,h2,h3,h4,h5,h6 {
    font-family: 'Roboto Condensed', Sans-Serif;
}

#app {
    border: var(--spacer-3) solid var(--color-fg);
    margin: var(--spacer-4);
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
}

.logo {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: var(--spacer-5) 0 
}
.logo .logo-img {
    width: calc(1.5rem + 2vw);
    height: calc(1.5rem + 2vw);
    border: 4px solid var(--color-fg);
}
.logo .logo-text {
    margin: 0;
    margin-left: var(--spacer-4);
}
.logo .logo-highlight {
    color: var(--bs-red)
}


#inner {
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
}

#inner .content {
    flex: 1 1 auto;
    border: var(--spacer-1) solid var(--color-fg);
}

#inner .content>.row {height: auto; /*TODO*/}


.tabs .tab {
    border-radius: 0;
    border: var(--spacer-1) solid var(--color-fg);
    border-bottom: 0;
    padding: 0 var(--spacer-5);
}
.tabs .tab:first-child {border-top-left-radius: 8px;}
.tabs .tab:last-child {border-top-right-radius: 8px;}
.tabs .tab:not(:first-child) {
    border-left:0;
}
.tabs .tab:hover {
    background-color: var(--bs-gray-400);
}
.tabs .tab:active {
    background-color: var(--bs-gray-500);
}

.user .user-pic {
    aspect-ratio: 1/1;
    object-fit: scale-down;
    
    border-radius: 50%;
    border: var(--spacer-1) solid rgba(0, 0, 0, 0);
    background-color: var(--color-fg);
}
.user .user-pic[src$=svg] {
    --huerotation: 0;
    object-fit: cover;
    filter: hue-rotate(calc(360deg * var(--huerotation)));
}

.drawing-area {
    border: var(--spacer-1) solid var(--color-fg);
    position: relative;
}

.drawing-area .toolbar {
    background: rgba(255, 255, 255, 0.7);
    position: relative;
    z-index: 10;
}

.drawing-area .toolbar .btn,
.drawing-area .toolbar .input-container {
    margin-bottom: var(--spacer-3);
}

.drawing-area #artwork {
    --cell-size: 50;
    position:absolute;
    height: 100%;
    width: 100%;
    object-fit: cover;
    object-position: 0 0;
}

.drawing-area #artwork .shape {
    --x: 0;
    --y: 0;
    --rot: 0;
    --fill: #000;
    transition: all 1s ease;
    transform-origin: calc(1px * var(--cell-size) / 2)  calc(1px * var(--cell-size) / 2);
    transform: translate(calc(1px * var(--x) * var(--cell-size)), calc(1px * var(--y) * var(--cell-size))) rotateZ(calc(90deg * var(--rot))) ;
}

.drawing-area #artwork .shape.alt {
    --x: var(--x-alt)!important;
    --y: var(--y-alt)!important;
    --rot: var(--rot-alt)!important;
}

.tools {
    border: var(--spacer-1) solid var(--color-fg);
}

.btn.btn-paint {
    border-color: transparent;
    border-radius: 50% 50%;
    position:relative;
}

.btn.btn-L {
    min-width: calc(6rem + 5vw);
}
.btn.btn-S {
    min-width: 30px;
    min-height: 30px;
}

.btn.btn-paint:hover {
    background-color: var(--bs-gray-400);
}
.btn.btn-paint:active {
    background-color: var(--bs-gray-500);
}

.input-container {
    position: relative;
}

.input-container input {
    border-color: transparent;
    background:transparent;
    outline: none;
    border-radius: 1000px;
}
.input-container input:focus {
    background-color: var(--bs-gray-400);
}

.drawn-outline {
    --rotate-x: 0;
    --rotate-y: 0;
    --rotate-z: 0;
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    pointer-events: none;
    transform: rotateX(calc(180deg * var(--rotate-x))) rotateY(calc(180deg * var(--rotate-y))) rotateZ(calc(180deg * var(--rotate-z)))
}


/*grid styles*/
.d-grid {display: grid!important;}
.d-grid.cols-1 {grid-template-columns: repeat(1, 1fr);}
.d-grid.cols-2 {grid-template-columns: repeat(2, 1fr);}
.d-grid.cols-3 {grid-template-columns: repeat(3, 1fr);}
.d-grid.cols-4 {grid-template-columns: repeat(4, 1fr);}
.grid-row-full-width {grid-column-start: 1; grid-column-end: -1;}

/*templates*/
[slot] {display:none}


/*material shadows*/
/* all 0.3s cubic-bezier(.25,.8,.25,1)*/
.material-box-shadow-1 {box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);}
.material-box-shadow-2 {box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);}
.material-box-shadow-3 {box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);}
.material-box-shadow-4 {box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);}
.material-box-shadow-5 {box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);}